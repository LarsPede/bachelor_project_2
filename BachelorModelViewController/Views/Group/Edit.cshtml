@using Microsoft.AspNetCore.Identity;
@using Microsoft.AspNetCore.Identity.EntityFrameworkCore;

@inject RoleManager<IdentityRole> roleManager

@model BachelorModelViewController.Models.ViewModels.GroupViewModels.EditViewModel

@{
    ViewData["Title"] = "Edit";
}

<h2>Edit</h2>

<form asp-action="Edit">
    <div class="form-horizontal">
        <h4>GroupViewModel</h4>
        <hr />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="Id" />
        <div class="form-group">
            <label asp-for="GroupName" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="GroupName" class="form-control" />
                <span asp-validation-for="GroupName" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>

<table class="table table-responsive">
    <thead>
        <tr>
            <th>
                Applying Member
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.ApplyingMembers)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.User.FirstName) @Html.DisplayFor(modelItem => item.User.LastName)
            </td>
            <td class="pull-right">
                <a class="btn btn-success"><span class="glyphicon glyphicon-thumbs-up"></span></a>
                <a class="btn btn-danger"><span class="glyphicon glyphicon-thumbs-down"></span></a>
            </td>
        </tr>
        }
    </tbody>
</table>
<table class="table table-responsive">
    <thead>
        <tr>
            <th>
                Member
            </th>
            <th>
                Role
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Members)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.User.FirstName) @Html.DisplayFor(modelItem => item.User.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => roleManager.FindByIdAsync(item.RoleId).Result.Name)
                </td>
                <td class="pull-right">
                    @Html.DropDownList("Roles", new SelectList(roleManager.Roles.Where(x => x.Name != "God"), "Name", "Name", roleManager.FindByIdAsync(item.RoleId).Result.Name), String.Empty)
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    <a asp-action="Index">Back to List</a>
</div>

